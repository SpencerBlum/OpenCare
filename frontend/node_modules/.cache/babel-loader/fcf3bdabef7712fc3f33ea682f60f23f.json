{"ast":null,"code":"var _jsxFileName = \"/Users/spencerblum/Development/projects/OpenCare/frontend/src/component/FilterToggles.js\";\nimport React, { Component } from 'react';\n\nclass FilterToggles extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isChecked: false,\n      checkedNames: []\n    };\n\n    this.handleCheck = e => {\n      console.log(e.target);\n      debugger;\n      console.log(this.state.isChecked);\n\n      if (!this.state.checkedNames.includes(e.target.name) && e.target.checked === true) {\n        this.setState({\n          checkedNames: [...this.state.checkedNames, e.target.name]\n        });\n      } else if (this.state.checkedNames.includes(e.target.name)) {\n        let newSet = this.state.checkedNames.filter(name => {\n          return name !== e.target.name;\n        });\n        this.setState({\n          checkedNames: newSet\n        });\n      }\n\n      this.setState({\n        isChecked: !this.state.isChecked\n      });\n      console.log(this.state.checkedNames);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"scales\",\n      onChange: e => this.handleCheck(e),\n      name: this.props.trait.name,\n      checked: this.state.isChecked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }), \" \", this.props.trait.name);\n  }\n\n}\n\nexport default FilterToggles;","map":{"version":3,"sources":["/Users/spencerblum/Development/projects/OpenCare/frontend/src/component/FilterToggles.js"],"names":["React","Component","FilterToggles","state","isChecked","checkedNames","handleCheck","e","console","log","target","includes","name","checked","setState","newSet","filter","render","props","trait"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAElCE,KAFkC,GAE1B;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,YAAY,EAAE;AAFV,KAF0B;;AAAA,SAOlCC,WAPkC,GAOnBC,CAAD,IAAO;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAd;AACA;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,SAAvB;;AACA,UAAG,CAAC,KAAKD,KAAL,CAAWE,YAAX,CAAwBM,QAAxB,CAAiCJ,CAAC,CAACG,MAAF,CAASE,IAA1C,CAAD,IAAoDL,CAAC,CAACG,MAAF,CAASG,OAAT,KAAqB,IAA5E,EAAkF;AAC9E,aAAKC,QAAL,CAAc;AAACT,UAAAA,YAAY,EAAE,CAAC,GAAG,KAAKF,KAAL,CAAWE,YAAf,EAA6BE,CAAC,CAACG,MAAF,CAASE,IAAtC;AAAf,SAAd;AACH,OAFD,MAEO,IAAI,KAAKT,KAAL,CAAWE,YAAX,CAAwBM,QAAxB,CAAiCJ,CAAC,CAACG,MAAF,CAASE,IAA1C,CAAJ,EAAoD;AACxD,YAAIG,MAAM,GAAG,KAAKZ,KAAL,CAAWE,YAAX,CAAwBW,MAAxB,CAA+BJ,IAAI,IAAI;AAAC,iBAAOA,IAAI,KAAKL,CAAC,CAACG,MAAF,CAASE,IAAzB;AAA+B,SAAvE,CAAb;AACC,aAAKE,QAAL,CAAc;AAACT,UAAAA,YAAY,EAAEU;AAAf,SAAd;AACH;;AACD,WAAKD,QAAL,CAAc;AAACV,QAAAA,SAAS,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAxB,OAAd;AACDI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWE,YAAvB;AAEF,KApBiC;AAAA;;AAsBtCY,EAAAA,MAAM,GAAE;AACR,wBACI;AAAK,MAAA,SAAS,EAAE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,EAAE,EAAC,QAA1B;AAAmC,MAAA,QAAQ,EAAIV,CAAD,IAAM,KAAKD,WAAL,CAAiBC,CAAjB,CAApD;AAAyE,MAAA,IAAI,EAAE,KAAKW,KAAL,CAAWC,KAAX,CAAiBP,IAAhG;AAAsG,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWC,SAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,OAC6I,KAAKc,KAAL,CAAWC,KAAX,CAAiBP,IAD9J,CADJ;AAMC;;AA7BqC;;AA+BtC,eAAeV,aAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nclass FilterToggles extends Component {\n\n    state = {\n        isChecked: false,\n        checkedNames: []\n    }\n\n    handleCheck = (e) => {\n        console.log(e.target)\n        debugger\n        console.log(this.state.isChecked)\n        if(!this.state.checkedNames.includes(e.target.name) && e.target.checked === true ){\n            this.setState({checkedNames: [...this.state.checkedNames, e.target.name]})\n        } else if (this.state.checkedNames.includes(e.target.name)){\n           let newSet = this.state.checkedNames.filter(name => {return name !== e.target.name })\n            this.setState({checkedNames: newSet})\n        }\n        this.setState({isChecked: !this.state.isChecked})\n       console.log(this.state.checkedNames)\n       \n    }\n\nrender(){\nreturn(\n    <div className= \"\">\n        <input type=\"checkbox\" id=\"scales\" onChange= {(e)=> this.handleCheck(e)} name={this.props.trait.name} checked={this.state.isChecked} /> {this.props.trait.name}\n\n    </div>\n)\n}\n}\nexport default FilterToggles\n"]},"metadata":{},"sourceType":"module"}