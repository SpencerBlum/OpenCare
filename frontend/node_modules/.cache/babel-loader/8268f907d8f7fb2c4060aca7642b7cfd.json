{"ast":null,"code":"var _jsxFileName = \"/Users/spencerblum/Development/projects/OpenCare/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { renderBusinessCards, businessNameSearch, locationSearch } from \"./actions/search.js\";\nimport { connect } from 'react-redux';\nimport Home from \"./main/Home.js\";\nimport Login from \"./main/Login.js\";\nimport Show from \"./main/Show.js\";\nimport SignUp from \"./main/SignUp.js\";\nimport Review from \"./main/Review.js\";\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderBusinessesFilter = () => {\n      let array = this.props.allBusinesses;\n      console.log(this.props.currentBusinessSearch);\n\n      if (this.props.currentBusinessSearch !== \"\") {\n        array = array.filter(el => {\n          console.log(el.name);\n          console.log(this.props.currentBusinessSearch);\n          return el.name.toLowerCase().includes(this.props.currentBusinessSearch);\n        });\n      } // if(this.props.currentLocationSearch !== \"\"){\n      //   array = array.filter(business => { return business.city.includes(this.props.currentLocationSearch)})\n      // }\n      // console.log(array)\n\n\n      this.props.renderBusinessCards(array);\n    };\n\n    this.handleHeaderSubmit = e => {\n      e.preventDefault();\n      this.props.businessNameSearch(e.target.businessSearch.value);\n      this.props.locationSearch(e.target.location.value);\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/businesses').then(response => response.json()).then(data => {\n      console.log('Success:', data);\n      this.props.loadBusinesses(data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n\n  render() {\n    this.renderBusinessesFilter();\n    return (\n      /*#__PURE__*/\n      // { this.props.currentBusinessSearch !== \"\"?  this.renderBusinessesFilter() : null}\n      React.createElement(Router, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: () => /*#__PURE__*/React.createElement(Home, {\n          handleHeaderSubmit: this.handleHeaderSubmit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 43\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/Login\",\n        render: () => /*#__PURE__*/React.createElement(Login, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 48\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/Show\",\n        render: () => /*#__PURE__*/React.createElement(Show, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 47\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/SignUp\",\n        render: () => /*#__PURE__*/React.createElement(SignUp, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 49\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/Review\",\n        render: () => /*#__PURE__*/React.createElement(Review, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 49\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      })))\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    allBusinesses: state.allBusinesses,\n    currentBusinessSearch: state.currentBusinessSearch,\n    currentLocationSearch: state.currentLocationSearch\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadBusinesses: businesses => dispatch({\n      type: \"Load_Businesses\",\n      payload: businesses\n    }),\n    renderBusinessCards: businesses => dispatch(renderBusinessCards(businesses)),\n    businessNameSearch: name => dispatch(businessNameSearch(name)),\n    locationSearch: location => dispatch(locationSearch(location))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/spencerblum/Development/projects/OpenCare/frontend/src/App.js"],"names":["React","Component","renderBusinessCards","businessNameSearch","locationSearch","connect","Home","Login","Show","SignUp","Review","BrowserRouter","Router","Route","Redirect","App","renderBusinessesFilter","array","props","allBusinesses","console","log","currentBusinessSearch","filter","el","name","toLowerCase","includes","handleHeaderSubmit","e","preventDefault","target","businessSearch","value","location","componentDidMount","fetch","then","response","json","data","loadBusinesses","catch","error","render","mapStateToProps","state","currentLocationSearch","mapDispatchToProps","dispatch","businesses","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { renderBusinessCards, businessNameSearch, locationSearch } from \"./actions/search.js\";\n\n\n\nimport { connect } from 'react-redux'\n\nimport  Home from \"./main/Home.js\"\nimport  Login from \"./main/Login.js\"\nimport  Show from \"./main/Show.js\"\nimport  SignUp from \"./main/SignUp.js\"\nimport  Review from \"./main/Review.js\"\n\n\n\n\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\n\n\nclass App extends Component {\n\n  componentDidMount(){\n\n  fetch('http://localhost:3000/businesses')\n.then(response => response.json())\n.then(data => {\n  console.log('Success:', data);\n  this.props.loadBusinesses(data)\n})\n.catch((error) => {\n  console.error('Error:', error);\n\n});\n  }\n\n \n\n  renderBusinessesFilter = ()=> {\n    let array = this.props.allBusinesses\n    console.log(this.props.currentBusinessSearch)\n      \n      if(this.props.currentBusinessSearch !== \"\"){\n      array =  array.filter(el => { \n        console.log(el.name)\n        console.log(this.props.currentBusinessSearch)  \n        return el.name.toLowerCase().includes(this.props.currentBusinessSearch) \n      \n      })\n    }\n    // if(this.props.currentLocationSearch !== \"\"){\n    //   array = array.filter(business => { return business.city.includes(this.props.currentLocationSearch)})\n    // }\n    // console.log(array)\n    this.props.renderBusinessCards(array)\n  }\n\n   handleHeaderSubmit = (e) => {\n    e.preventDefault()\n   \n    this.props.businessNameSearch(e.target.businessSearch.value)\n    this.props.locationSearch(e.target.location.value)\n\n   }\n\n\nrender(){\n\n  this.renderBusinessesFilter()\n \n  return (\n\n    // { this.props.currentBusinessSearch !== \"\"?  this.renderBusinessesFilter() : null}\n    <Router  >\n      <div>\n      <Route exact path=\"/\" render={() => <Home  handleHeaderSubmit ={ this.handleHeaderSubmit } /> } />\n      <Route exact path=\"/Login\" render={() => <Login /> } />\n      <Route exact path=\"/Show\" render={() => <Show /> } />\n      <Route exact path=\"/SignUp\" render={() => <SignUp /> } />\n      <Route exact path=\"/Review\" render={() => <Review /> } />\n      </div>\n    </Router>\n  );\n}\n}\n\nconst mapStateToProps = state =>  {\n    return {\n      allBusinesses: state.allBusinesses,\n      currentBusinessSearch: state.currentBusinessSearch,\n      currentLocationSearch: state.currentLocationSearch\n      }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadBusinesses: (businesses) => dispatch({ type: \"Load_Businesses\", payload: businesses }),\n    renderBusinessCards: (businesses) => dispatch(renderBusinessCards(businesses)),\n    \n    businessNameSearch: (name) => dispatch(businessNameSearch(name)),\n    locationSearch: (location) => dispatch(locationSearch(location)),\n    \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}