{"ast":null,"code":"var _jsxFileName = \"/Users/spencerblum/Development/projects/OpenCare/frontend/src/component/FilterToggles.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addOrDeleteTrait } from '../actions/filter';\n\nconst FilterToggles = props => {\n  const state = useSelector(state => {\n    return {\n      checkedTraits: state.checkedTraits\n    };\n  });\n  const dispatch = useDispatch(); // state = {\n  //     isChecked: false,\n  //     checkedTraits: []\n  // }\n\n  const handleCheck = e => {\n    console.log(e.target.checked);\n    console.log(e.target.name);\n    debugger;\n    console.log(state.checkedTraits.includes(e.target.name));\n\n    if (!state.checkedTraits.includes(e.target.name) && e.target.checked === true) {\n      dispatch(addOrDeleteTrait([...state.checkedTraits, e.target.name]));\n    } else if (state.checkedTraits.includes(e.target.name)) {\n      let newSet = state.checkedTraits.filter(name => {\n        return name !== e.target.name;\n      });\n      dispatch(addOrDeleteTrait(newSet));\n    }\n\n    this.setState({\n      isChecked: !this.state.isChecked\n    });\n    console.log(this.state.checkedTraits);\n  }; //    const handleCheck = (e) => {\n  //         console.log(e.target.checked)\n  //         console.log(e.target.name)\n  //         console.log(this.state.checkedTraits.includes(e.target.name))\n  //         if(!this.state.checkedTraits.includes(e.target.name) && e.target.checked === true ){\n  //             this.setState({checkedTraits: [...this.state.checkedTraits, e.target.name]})\n  //         } else if (this.state.checkedTraits.includes(e.target.name)){\n  //             let newSet = this.state.checkedTraits.filter(name => {return name !== e.target.name })\n  //             this.setState({checkedTraits: newSet})\n  //         }\n  //         this.setState({isChecked: !this.state.isChecked})\n  //         console.log(this.state.checkedTraits)\n  //     }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"scales\",\n    onChange: e => handleCheck(e),\n    name: props.trait.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), \" \", props.trait.name);\n};\n\nexport default FilterToggles;","map":{"version":3,"sources":["/Users/spencerblum/Development/projects/OpenCare/frontend/src/component/FilterToggles.js"],"names":["React","useSelector","useDispatch","addOrDeleteTrait","FilterToggles","props","state","checkedTraits","dispatch","handleCheck","e","console","log","target","checked","name","includes","newSet","filter","setState","isChecked","trait"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,gBAAT,QAAiC,mBAAjC;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAE7B,QAAMC,KAAK,GAAGL,WAAW,CAACK,KAAK,IAAI;AAC/B,WAAO;AAACC,MAAAA,aAAa,EAAED,KAAK,CAACC;AAAtB,KAAP;AACH,GAFwB,CAAzB;AAIA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B,CAN6B,CAS7B;AACA;AACA;AACA;;AAGG,QAAMO,WAAW,GAAIC,CAAD,IAAO;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,OAArB;AAEAH,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASE,IAArB;AACA;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACC,aAAN,CAAoBS,QAApB,CAA6BN,CAAC,CAACG,MAAF,CAASE,IAAtC,CAAZ;;AACA,QAAG,CAACT,KAAK,CAACC,aAAN,CAAoBS,QAApB,CAA6BN,CAAC,CAACG,MAAF,CAASE,IAAtC,CAAD,IAAgDL,CAAC,CAACG,MAAF,CAASC,OAAT,KAAqB,IAAxE,EAA8E;AAC1EN,MAAAA,QAAQ,CAACL,gBAAgB,CAAC,CAAC,GAAGG,KAAK,CAACC,aAAV,EAAyBG,CAAC,CAACG,MAAF,CAASE,IAAlC,CAAD,CAAjB,CAAR;AACH,KAFD,MAEO,IAAIT,KAAK,CAACC,aAAN,CAAoBS,QAApB,CAA6BN,CAAC,CAACG,MAAF,CAASE,IAAtC,CAAJ,EAAgD;AACnD,UAAIE,MAAM,GAAGX,KAAK,CAACC,aAAN,CAAoBW,MAApB,CAA2BH,IAAI,IAAI;AAAC,eAAOA,IAAI,KAAKL,CAAC,CAACG,MAAF,CAASE,IAAzB;AAA+B,OAAnE,CAAb;AACAP,MAAAA,QAAQ,CAACL,gBAAgB,CAACc,MAAD,CAAjB,CAAR;AACH;;AACD,SAAKE,QAAL,CAAc;AAACC,MAAAA,SAAS,EAAE,CAAC,KAAKd,KAAL,CAAWc;AAAxB,KAAd;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,aAAvB;AACH,GAdE,CAf0B,CAgCjC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,EAAE,EAAC,QAA1B;AAAmC,IAAA,QAAQ,EAAIG,CAAD,IAAMD,WAAW,CAACC,CAAD,CAA/D;AAAoE,IAAA,IAAI,EAAEL,KAAK,CAACgB,KAAN,CAAYN,IAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,OAEqGV,KAAK,CAACgB,KAAN,CAAYN,IAFjH,CADJ;AAOC,CAtDD;;AAuDA,eAAeX,aAAf","sourcesContent":["import React from 'react';\nimport { useSelector,useDispatch } from 'react-redux'\nimport { addOrDeleteTrait } from '../actions/filter'\n\nconst FilterToggles = (props) => {\n\n    const state = useSelector(state => {\n        return {checkedTraits: state.checkedTraits }\n    })\n    \n    const dispatch = useDispatch()\n\n\n    // state = {\n    //     isChecked: false,\n    //     checkedTraits: []\n    // }\n\n\n       const handleCheck = (e) => {\n        console.log(e.target.checked)\n\n        console.log(e.target.name)\n        debugger\n        console.log(state.checkedTraits.includes(e.target.name))\n        if(!state.checkedTraits.includes(e.target.name) && e.target.checked === true ){\n            dispatch(addOrDeleteTrait([...state.checkedTraits, e.target.name]))\n        } else if (state.checkedTraits.includes(e.target.name)){\n            let newSet = state.checkedTraits.filter(name => {return name !== e.target.name })\n            dispatch(addOrDeleteTrait(newSet))\n        }\n        this.setState({isChecked: !this.state.isChecked})\n        console.log(this.state.checkedTraits)\n    }\n\n\n//    const handleCheck = (e) => {\n//         console.log(e.target.checked)\n\n//         console.log(e.target.name)\n//         console.log(this.state.checkedTraits.includes(e.target.name))\n//         if(!this.state.checkedTraits.includes(e.target.name) && e.target.checked === true ){\n//             this.setState({checkedTraits: [...this.state.checkedTraits, e.target.name]})\n//         } else if (this.state.checkedTraits.includes(e.target.name)){\n//             let newSet = this.state.checkedTraits.filter(name => {return name !== e.target.name })\n//             this.setState({checkedTraits: newSet})\n//         }\n//         this.setState({isChecked: !this.state.isChecked})\n//         console.log(this.state.checkedTraits)\n//     }\n\nreturn(\n    <div className= \"\">\n        {/* <input type=\"checkbox\" id=\"scales\" onChange= {(e)=> this.handleCheck(e)} name={this.props.trait.name} checked={this.state.isChecked} /> {this.props.trait.name} */}\n        <input type=\"checkbox\" id=\"scales\" onChange= {(e)=> handleCheck(e)} name={props.trait.name}  /> {props.trait.name}\n\n    </div>\n)\n}\nexport default FilterToggles\n"]},"metadata":{},"sourceType":"module"}