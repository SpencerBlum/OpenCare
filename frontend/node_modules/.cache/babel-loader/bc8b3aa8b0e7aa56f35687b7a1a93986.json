{"ast":null,"code":"var _jsxFileName = \"/Users/spencerblum/Development/projects/OpenCare/frontend/src/main/Login.js\";\nimport React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    currentUser\n  } = useSelector(state => {\n    return {\n      currentUser: state.currentUser\n    };\n  });\n  console.log(currentUser);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(e.target.email.value);\n    let data = {\n      email: e.target.email.value,\n      password: e.target.password.value\n    };\n    fetch('http://localhost:3000/login', {\n      method: 'POST',\n      // or 'PUT'\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n\n      if (data.error !== \"Invalid username or password\") {\n        dispatch({\n          type: \"ADD_CURRENT_USER\",\n          payload: data\n        });\n        history.push('/');\n      } else {\n        window.alert(\"Wrong Password\");\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \" Login component\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \" Email: \"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \" Password: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/spencerblum/Development/projects/OpenCare/frontend/src/main/Login.js"],"names":["React","useHistory","useSelector","useDispatch","Login","dispatch","history","currentUser","state","console","log","handleSubmit","e","preventDefault","target","email","value","data","password","fetch","method","headers","body","JSON","stringify","then","response","json","error","type","payload","push","window","alert","catch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector,useDispatch } from 'react-redux'\n\n\nconst Login = () => {\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const {currentUser} = useSelector(state => {\n        return {currentUser: state.currentUser }\n    })\n\n    console.log(currentUser)\n\nconst handleSubmit = (e) => {\n\n    \n    e.preventDefault()\n    console.log(e.target.email.value)\n    let data = { \n        email: e.target.email.value,\n        password: e.target.password.value\n     }\n\n     fetch('http://localhost:3000/login', {\n        method: 'POST', // or 'PUT'\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n        })\n\n        .then(response => response.json())\n        .then(data => {\n        console.log('Success:', data);\n        if (data.error !== \"Invalid username or password\"){\n        dispatch({type: \"ADD_CURRENT_USER\", payload: data})\n        history.push('/')\n        } else {\n            window.alert(\"Wrong Password\")\n        }\n\n        })\n        .catch((error) => {\n        console.error('Error:', error);\n        });\n}\n\n\n\nreturn(\n\n    <div>\n        <div>\n        <h1> Login component</h1>\n        <form onSubmit= {(e)=> handleSubmit(e)} >\n        <label> Email: </label> <input type= \"text\" name = \"email\" /> \n        <br/>\n        <br/>\n        <label> Password: </label>\n        <input type= \"text\" name = \"password\"/> \n        <br/>\n        <br/>\n        <input type= \"submit\" value=\"Submit\" />\n        </form>\n        </div>\n\n\n    </div>\n)\n}\nexport default Login"]},"metadata":{},"sourceType":"module"}