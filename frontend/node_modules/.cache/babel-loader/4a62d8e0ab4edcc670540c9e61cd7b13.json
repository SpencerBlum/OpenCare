{"ast":null,"code":"var _jsxFileName = \"/Users/spencerblum/Development/projects/OpenCare/frontend/src/main/ResetPassword.js\";\nimport React from \"react\";\nimport swal from 'sweetalert';\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst ResetPassword = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const state = useSelector(state => {\n    return {\n      currentUser: state.currentUser\n    };\n  });\n\n  if (state.currentUser === null) {\n    history.push(\"/login\");\n  } else {\n    const handleSubmit = e => {\n      e.preventDefault();\n      console.log(state);\n\n      if (e.target.currentpassword.value === e.target.newpassword.value) {\n        swal({\n          text: \"Passwords must be different\",\n          icon: \"warning\"\n        });\n      } else {\n        const data = {\n          email: state.currentUser.email,\n          currentpassword: e.target.currentpassword.value,\n          newpassword: e.target.newpassword.value\n        };\n        fetch('http://localhost:3000/resetpassword', {\n          method: 'PATCH',\n          // or 'PUT'\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        }).then(response => response.json()).then(data => {\n          console.log('Success:', data);\n\n          if (data.error !== \"Invalid\") {\n            dispatch({\n              type: \"ADD_CURRENT_USER\",\n              payload: data\n            });\n            swal({\n              text: \"Password Changed\",\n              icon: \"success\"\n            });\n            history.push('/Profile');\n          } else {\n            swal({\n              text: \"Wrong Password \",\n              icon: \"warning\"\n            });\n          }\n        }).catch(error => {\n          console.error('Error:', error);\n        });\n      }\n    };\n\n    const handleBack = () => {\n      history.push(\"/Profile\");\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \" Reset Password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => handleSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \" Current Passord: \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"currentpassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, \" New Password: \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"newpassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, \" Back\")));\n  }\n};\n\nexport default ResetPassword;","map":{"version":3,"sources":["/Users/spencerblum/Development/projects/OpenCare/frontend/src/main/ResetPassword.js"],"names":["React","swal","useHistory","useSelector","useDispatch","ResetPassword","dispatch","history","state","currentUser","push","handleSubmit","e","preventDefault","console","log","target","currentpassword","value","newpassword","text","icon","data","email","fetch","method","headers","body","JSON","stringify","then","response","json","error","type","payload","catch","handleBack"],"mappings":"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","sourcesContent":["\nimport React from \"react\"\nimport swal from 'sweetalert';\n\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector,useDispatch } from 'react-redux'\n\nconst ResetPassword = () => {\n\nconst dispatch = useDispatch()\nconst history = useHistory()\n\n\n\nconst state = useSelector( state => {\n    return {currentUser: state.currentUser }  \n})\n\nif(state.currentUser === null){\n    history.push(\"/login\")\n} else {\n\nconst handleSubmit = (e) => {\ne.preventDefault()\n    console.log(state)\n\n    if (e.target.currentpassword.value === e.target.newpassword.value){\n        swal({ \n            text: \"Passwords must be different\",\n            icon: \"warning\"\n    })  }else {\n\n    const data = { \n        email: state.currentUser.email,\n        currentpassword: e.target.currentpassword.value,\n        newpassword: e.target.newpassword.value\n}\n    fetch('http://localhost:3000/resetpassword', {\n    method: 'PATCH', // or 'PUT'\n    headers: {\n        'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n    })\n    .then(response => response.json())\n    .then(data => {\n    console.log('Success:', data); \n    if (data.error !== \"Invalid\"){\n        dispatch({type: \"ADD_CURRENT_USER\", payload: data})\n        swal({ \n            text: \"Password Changed\",\n            icon: \"success\"\n    })\n        history.push('/Profile')\n        } else {\n            swal({ \n                text: \"Wrong Password \",\n                icon: \"warning\"\n        })\n        }\n    })\n    .catch((error) => {\n    console.error('Error:', error);\n    });\n}\n}\n\n\n\nconst handleBack = () => {\nhistory.push(\"/Profile\")\n\n}\n\n\n\nreturn(\n\n    <div>\n        <div>\n        <h1> Reset Password</h1>\n        <form onSubmit= {(e)=> handleSubmit(e)} >\n        <label> Current Passord: </label>\n        <br/>\n        <input type= \"text\" name = \"currentpassword\" /> \n        <br/>\n        <br/>\n        <label> New Password: </label>\n        <br/>\n        <input type= \"text\" name = \"newpassword\"/> \n        <br/>\n        <br/>\n        <input type= \"submit\" value=\"Submit\" />\n        </form>\n        <br/>\n        <br/>\n        <button onClick={handleBack}> Back</button>\n\n\n        </div>\n\n\n    </div>\n)\n}\n}\nexport default ResetPassword"]},"metadata":{},"sourceType":"module"}