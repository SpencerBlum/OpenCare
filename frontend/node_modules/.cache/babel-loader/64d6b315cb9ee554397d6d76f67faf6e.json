{"ast":null,"code":"var _jsxFileName = \"/Users/spencerblum/Development/projects/OpenCare/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { renderBusinessCards, businessNameSearch, locationSearch } from \"./actions/search.js\";\nimport { connect } from 'react-redux';\nimport Home from \"./main/Home.js\";\nimport Login from \"./main/Login.js\";\nimport Show from \"./main/Show.js\";\nimport SignUp from \"./main/SignUp.js\";\nimport Review from \"./main/Review.js\";\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { loadAllTraits } from './actions/filter.js';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderBusinessesFilter = () => {\n      let array = this.props.allBusinesses;\n      console.log(this.props.currentBusinessSearch);\n\n      if (this.props.currentBusinessSearch !== \"\") {\n        array = array.filter(el => {\n          return el.name.toLowerCase().includes(this.props.currentBusinessSearch.toLowerCase());\n        });\n      }\n\n      if (this.props.currentLocationSearch !== \"\") {\n        array = array.filter(el => {\n          return el.city.toLowerCase().includes(this.props.currentLocationSearch.toLowerCase());\n        });\n      }\n      /*\n          if(this.props.checkedTraits !== []){\n            this.props.checkedTraits.forEach(traitname => {\n              console.log(traitname)\n              console.log(array)\n              array = array.filter(business => {\n                console.log(business.traits)\n               if(business.traits){\n                //debugger\n                business.traits.forEach(trait => {\n                console.log(trait)\n                console.log(trait.name)\n                console.log(traitname)\n                console.log(trait.name.includes(traitname))\n                return trait.name.includes(traitname)\n               \n              \n              })\n              console.log(array)\n               }\n             })\n            })\n          }\n          */\n\n      /*\n      let checkedTraits = this.props.checkedTraits;\n      let retArray = [];\n      if(checkedTraits !== []){\n      checkedTraits.forEach(checkedTrait => {\n        array.filter\n      });\n      }\n      */\n\n\n      if (this.props.checkedTraits.length > 0) {\n        array = array.filter(business => {\n          console.log(business);\n          console.log(business.traits.length);\n          if (business.traits.length > 0) console.log(business.traits[0].name);\n          if (this.props.checkedTraits.length > 0) console.log(this.props.checkedTraits[0]);\n          if (business.traits.length > 0 && this.props.checkedTraits.length > 0 && business.traits[0].name === this.props.checkedTraits[0]) return true;else return false;\n        });\n      }\n\n      this.props.renderBusinessCards(array);\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/businesses').then(response => response.json()).then(data => {\n      console.log('Success:', data);\n      this.props.loadBusinesses(data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n    fetch('http://localhost:3000/traits').then(response => response.json()).then(data => {\n      console.log('Success:', data);\n      this.props.loadAllTraits(data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n\n  render() {\n    this.renderBusinessesFilter();\n    return (\n      /*#__PURE__*/\n      // { this.props.currentBusinessSearch !== \"\"?  this.renderBusinessesFilter() : null}\n      React.createElement(Router, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: () => /*#__PURE__*/React.createElement(Home, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 43\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/Login\",\n        render: () => /*#__PURE__*/React.createElement(Login, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 48\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/Show\",\n        render: () => /*#__PURE__*/React.createElement(Show, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 47\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/SignUp\",\n        render: () => /*#__PURE__*/React.createElement(SignUp, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 49\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/Review\",\n        render: () => /*#__PURE__*/React.createElement(Review, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 49\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 7\n        }\n      })))\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    allBusinesses: state.allBusinesses,\n    currentBusinessSearch: state.currentBusinessSearch,\n    currentLocationSearch: state.currentLocationSearch,\n    checkedTraits: state.checkedTraits\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadBusinesses: businesses => dispatch({\n      type: \"Load_Businesses\",\n      payload: businesses\n    }),\n    renderBusinessCards: businesses => dispatch(renderBusinessCards(businesses)),\n    businessNameSearch: name => dispatch(businessNameSearch(name)),\n    locationSearch: location => dispatch(locationSearch(location)),\n    loadAllTraits: traits => dispatch(loadAllTraits(traits))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/spencerblum/Development/projects/OpenCare/frontend/src/App.js"],"names":["React","Component","renderBusinessCards","businessNameSearch","locationSearch","connect","Home","Login","Show","SignUp","Review","BrowserRouter","Router","Route","Redirect","loadAllTraits","App","renderBusinessesFilter","array","props","allBusinesses","console","log","currentBusinessSearch","filter","el","name","toLowerCase","includes","currentLocationSearch","city","checkedTraits","length","business","traits","componentDidMount","fetch","then","response","json","data","loadBusinesses","catch","error","render","mapStateToProps","state","mapDispatchToProps","dispatch","businesses","type","payload","location"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { renderBusinessCards, businessNameSearch, locationSearch } from \"./actions/search.js\";\n\n\n\nimport { connect } from 'react-redux'\n\nimport  Home from \"./main/Home.js\"\nimport  Login from \"./main/Login.js\"\nimport  Show from \"./main/Show.js\"\nimport  SignUp from \"./main/SignUp.js\"\nimport  Review from \"./main/Review.js\"\n\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\n\nimport { loadAllTraits } from './actions/filter.js'\n\nclass App extends Component {\n\n  componentDidMount(){\n\nfetch('http://localhost:3000/businesses')\n.then(response => response.json())\n.then(data => {\n  console.log('Success:', data);\n  this.props.loadBusinesses(data)\n})\n.catch((error) => {\n  console.error('Error:', error);\n\n})\n\nfetch('http://localhost:3000/traits')\n.then(response => response.json())\n.then(data => {\nconsole.log('Success:', data);\nthis.props.loadAllTraits(data)\n})\n.catch((error) => {\nconsole.error('Error:', error);\n});\n\n  }\n\n\n\n  renderBusinessesFilter = ()=> {\n    let array = this.props.allBusinesses\n    console.log(this.props.currentBusinessSearch)\n      \n      if(this.props.currentBusinessSearch !== \"\"){\n      array =  array.filter(el => { \n        return el.name.toLowerCase().includes(this.props.currentBusinessSearch.toLowerCase()) \n      })\n    }\n\n    if(this.props.currentLocationSearch !== \"\"){\n      array =  array.filter(el => { \n        return el.city.toLowerCase().includes(this.props.currentLocationSearch.toLowerCase()) \n      })\n    }\n/*\n    if(this.props.checkedTraits !== []){\n      this.props.checkedTraits.forEach(traitname => {\n        console.log(traitname)\n        console.log(array)\n        array = array.filter(business => {\n          console.log(business.traits)\n         if(business.traits){\n          //debugger\n          business.traits.forEach(trait => {\n          console.log(trait)\n          console.log(trait.name)\n          console.log(traitname)\n          console.log(trait.name.includes(traitname))\n          return trait.name.includes(traitname)\n         \n        \n        })\n        console.log(array)\n         }\n       })\n      })\n    }\n    */\n    /*\n    let checkedTraits = this.props.checkedTraits;\n    let retArray = [];\n   if(checkedTraits !== []){\n    checkedTraits.forEach(checkedTrait => {\n      array.filter\n    });\n   }\n   */\n  if(this.props.checkedTraits.length > 0)\n  {\n    array = array.filter((business)=> {\n      console.log(business)\n      console.log(business.traits.length)\n      \n      if(business.traits.length > 0 )\n        console.log(business.traits[0].name)\n      \n      if(this.props.checkedTraits.length > 0)\n        console.log(this.props.checkedTraits[0])\n\n      if(business.traits.length>0 && this.props.checkedTraits.length > 0 && business.traits[0].name === this.props.checkedTraits[0])\n        return true;\n      else\n        return false;   \n    })\n  }\n    this.props.renderBusinessCards(array)\n  }\n\nrender(){\n\n  this.renderBusinessesFilter()\n \n  return (\n\n    // { this.props.currentBusinessSearch !== \"\"?  this.renderBusinessesFilter() : null}\n    <Router  >\n      <div>\n      <Route exact path=\"/\" render={() => <Home  /> } />\n      <Route exact path=\"/Login\" render={() => <Login /> } />\n      <Route exact path=\"/Show\" render={() => <Show /> } />\n      <Route exact path=\"/SignUp\" render={() => <SignUp /> } />\n      <Route exact path=\"/Review\" render={() => <Review /> } />\n      </div>\n    </Router>\n  );\n}\n}\n\nconst mapStateToProps = state =>  {\n    return {\n      allBusinesses: state.allBusinesses,\n      currentBusinessSearch: state.currentBusinessSearch,\n      currentLocationSearch: state.currentLocationSearch,\n      checkedTraits: state.checkedTraits\n      }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadBusinesses: (businesses) => dispatch({ type: \"Load_Businesses\", payload: businesses }),\n    renderBusinessCards: (businesses) => dispatch(renderBusinessCards(businesses)),\n    \n    businessNameSearch: (name) => dispatch(businessNameSearch(name)),\n    locationSearch: (location) => dispatch(locationSearch(location)),\n    loadAllTraits: (traits) => dispatch(loadAllTraits(traits)),\n    \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}