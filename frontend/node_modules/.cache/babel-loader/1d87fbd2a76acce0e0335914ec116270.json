{"ast":null,"code":"var _jsxFileName = \"/Users/spencerblum/Development/projects/OpenCare/frontend/src/main/Show.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ReviewCard from '../component/ReviewCard.js';\n\nclass Show extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderReviews = () => {\n      console.log(this.props.currentBusiness);\n\n      if (this.props.currentBusiness !== {}) {\n        this.props.currentBusiness.reviews.map(review => {\n          console.log(review);\n          return /*#__PURE__*/React.createElement(ReviewCard, {\n            review: review,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 21\n            }\n          });\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:3000/reviews/${this.props.currentBusiness.id}`).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n      this.props.loadReviews(data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }, \"Show Component\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.currentBusiness.img_url,\n      width: \"200px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }\n    }, \" \", this.props.currentBusiness.name, \" \"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }\n    }, \" \", this.props.currentBusiness.address, \" \"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }, \" \", this.props.currentBusiness.bio, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }, \" Write Review \"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }, \" Reviews \"), this.renderReviews());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentBusiness: state.currentBusiness,\n    currentReviews: state.currentReviews\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadReviews: reviews => dispatch({\n      type: \"LOAD_ALL_REVIEWS\",\n      payload: reviews\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Show);","map":{"version":3,"sources":["/Users/spencerblum/Development/projects/OpenCare/frontend/src/main/Show.js"],"names":["React","Component","connect","ReviewCard","Show","renderReviews","console","log","props","currentBusiness","reviews","map","review","componentDidMount","fetch","id","then","response","json","data","loadReviews","catch","error","render","img_url","name","address","bio","mapStateToProps","state","currentReviews","mapDispatchToProps","dispatch","type","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,UAAP,MAAuB,4BAAvB;;AAGA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SAgBzBI,aAhByB,GAgBT,MAAM;AAElBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,eAAvB;;AACA,UAAI,KAAKD,KAAL,CAAWC,eAAX,KAA+B,EAAnC,EAAsC;AACtC,aAAKD,KAAL,CAAWC,eAAX,CAA2BC,OAA3B,CAAmCC,GAAnC,CAAuCC,MAAM,IAAI;AAC7CN,UAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AACA,8BAAQ,oBAAC,UAAD;AAAY,YAAA,MAAM,EAAIA,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACH,SAHD;AAIH;AACJ,KAzB4B;AAAA;;AAGzBC,EAAAA,iBAAiB,GAAE;AAEfC,IAAAA,KAAK,CAAE,iCAAgC,KAAKN,KAAL,CAAWC,eAAX,CAA2BM,EAAG,EAAhE,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACdb,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBY,IAAxB;AACA,WAAKX,KAAL,CAAWY,WAAX,CAAuBD,IAAvB;AACC,KALD,EAMCE,KAND,CAMQC,KAAD,IAAW;AAClBhB,MAAAA,OAAO,CAACgB,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACC,KARD;AASH;;AAaDC,EAAAA,MAAM,GAAE;AACZ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAGA;AAAK,MAAA,GAAG,EAAI,KAAKf,KAAL,CAAWC,eAAX,CAA2Be,OAAvC;AAAiD,MAAA,KAAK,EAAG,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAO,KAAKhB,KAAL,CAAWC,eAAX,CAA2BgB,IAAlC,MALA,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAO,KAAKjB,KAAL,CAAWC,eAAX,CAA2BiB,OAAlC,MANA,eAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAO,KAAKlB,KAAL,CAAWC,eAAX,CAA2BkB,GAAlC,MARA,eASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,eAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVA,eAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAZA,EAcE,KAAKtB,aAAL,EAdF,CADJ;AAmBC;;AA/C4B;;AAkD7B,MAAMuB,eAAe,GAAGC,KAAK,IAAK;AAC9B,SAAO;AACHpB,IAAAA,eAAe,EAAEoB,KAAK,CAACpB,eADpB;AAEHqB,IAAAA,cAAc,EAAED,KAAK,CAACC;AAFnB,GAAP;AAKH,CAND;;AAQA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLZ,IAAAA,WAAW,EAAGV,OAAD,IAAasB,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,kBAAR;AAA4BC,MAAAA,OAAO,EAAExB;AAArC,KAAD;AAD7B,GAAP;AAGD,CAJD;;AAMA,eAAeR,OAAO,CAAC0B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C3B,IAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { connect } from 'react-redux'\n\nimport ReviewCard from '../component/ReviewCard.js'\n\n\nclass Show extends Component {\n\n\n    componentDidMount(){\n\n        fetch(`http://localhost:3000/reviews/${this.props.currentBusiness.id}`)\n        .then(response => response.json())\n        .then(data => {\n        console.log('Success:', data);\n        this.props.loadReviews(data)\n        })\n        .catch((error) => {\n        console.error('Error:', error);\n        });\n    }\n\n    renderReviews = () => {\n\n        console.log(this.props.currentBusiness)\n        if (this.props.currentBusiness !== {}){\n        this.props.currentBusiness.reviews.map(review => {\n            console.log(review)\n            return  <ReviewCard review = {review} />\n        })\n    }\n}\n\n    render(){\nreturn(\n    <div>\n    Show Component\n    <br/>\n    <img src= { this.props.currentBusiness.img_url } width = \"200px\" />\n\n    <h2> { this.props.currentBusiness.name } </h2>\n    <h5> { this.props.currentBusiness.address } </h5>\n\n    <h4> { this.props.currentBusiness.bio } </h4>\n    <br/>\n    <button> Write Review </button>\n\n    <h4> Reviews </h4>\n\n    { this.renderReviews() }\n\n    </div>\n)\n}\n}\n\nconst mapStateToProps = state =>  {\n    return { \n        currentBusiness: state.currentBusiness,\n        currentReviews: state.currentReviews\n    \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadReviews: (reviews) => dispatch({ type: \"LOAD_ALL_REVIEWS\", payload: reviews }),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Show);"]},"metadata":{},"sourceType":"module"}